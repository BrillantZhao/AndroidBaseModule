apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    //################## 系统级
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:25.3.0"
    compile "com.android.support:recyclerview-v7:25.3.0"
    compile "com.android.support:cardview-v7:25.3.0"
    compile "com.android.support:support-v4:25.3.0"
    compile "com.android.support:design:25.3.0"
    testCompile 'junit:junit:4.12'
    //=== multidex
    compile 'com.android.support:multidex:1.0.1'

    //################## 引入第三方jar包
    compile files('libs/commons-codec-1.6.jar')

    //################## git上第三方库

    //===SpinKit(https://github.com/ybq/Android-SpinKit)
    compile 'com.github.ybq:Android-SpinKit:1.1.0'

    //===retrofit和rxjava
    //=== retrofit(https://github.com/square/retrofit)
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.okhttp3:logging-interceptor:3.1.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    //=== rxjava(https://github.com/ReactiveX/RxJava)
    compile 'io.reactivex:rxjava:1.0.1'
    //=== rxandroid(https://github.com/ReactiveX/RxAndroid)
    compile 'io.reactivex:rxandroid:1.0.1'

    //=== RxLifecycle  (https://github.com/trello/RxLifecycle)
    compile 'com.trello:rxlifecycle:1.0'
    // If you want to bind to Android-specific lifecycles
    compile 'com.trello:rxlifecycle-android:1.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile 'com.trello:rxlifecycle-components:1.0'
    // If you want to use Navi for providers
    compile 'com.trello:rxlifecycle-navi:1.0'
    // If you want to use Kotlin syntax
    compile 'com.trello:rxlifecycle-kotlin:1.0'

    //===
    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.0.8@aar'

    //=== logger (https://github.com/orhanobut/logger)
    compile 'com.orhanobut:logger:1.13'

    //=== glide (https://github.com/bumptech/glide)
    compile 'com.github.bumptech.glide:glide:3.6.1'

    //===
    compile 'com.github.clans:fab:1.6.4'

    //===
    compile 'cn.hugeterry.updatefun:updatefun:1.8.6'

    //=== 基于SharedPreferences存储，可直接存储对象
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    //=== Butter Knife  (https://github.com/JakeWharton/butterknife)
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    //=== hawk (https://github.com/orhanobut/hawk)
    compile 'com.orhanobut:hawk:2.0.1'

    //=== AndroidUtilCode  (https://github.com/Blankj/AndroidUtilCode)
    compile 'com.blankj:utilcode:1.3.7'

    //=== fastjson (https://github.com/alibaba/fastjson)
    compile 'com.alibaba:fastjson:1.2.31'

    //################## 引用第三方工程

}
